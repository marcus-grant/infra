#cloud-config
version: v1
packages_update: true
packages_upgrade: true
packages:
  - ansible
  - ca-certificates
  - curl
  - fail2ban
  - git
  - gnupg
  - ufw
  - vim

manage-resolv-conf: true
resolv_conf:
  name_servers:
    - '1.1.1.1'
    - '8.8.8.8'
    - '8.8.4.4'

groups: [sudo, root, marcus, docker, podman, store, db]

users:
  - name: marcus
    groups: [marcus, sudo, docker, podman, store, db]
    shell: /bin/bash
    primary_group: marcus
    sudo: ['ALL=(ALL) NOPASSWD:ALL']
    ssh-authorized-keys:
      - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIFt7pGSIEPf1ZRz55wDXt6jO3BOJwe3MqdiWYXy63fFq Skeleton Key|marcusfg@protonmail.com
      - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIMzBwA0Wqe3Iwp1fgLIog0qasS8rtQ7lMH1H1GDj3QVY marcus@odin

write_files:
  - path: /etc/ssh/sshd_config
    content: |
      Port 48512
      Protocol 2
      HostKey /etc/ssh/ssh_host_rsa_key
      HostKey /etc/ssh/ssh_host_dsa_key
      HostKey /etc/ssh/ssh_host_ecdsa_key
      HostKey /etc/ssh/ssh_host_ed25519_key
      UsePrivilegeSeparation yes
      KeyRegenerationInterval 3600
      ServerKeyBits 1024
      SyslogFacility AUTH
      LogLevel INFO
      LoginGraceTime 120
      PermitRootLogin no
      PermitEmptyPasswords no
      PermitUserEnvironment yes
      PasswordAuthentication no
      StrictModes yes
      DebianBanner no
      RSAAuthentication yes
      PubkeyAuthentication yes
      IgnoreRhosts yes
      RhostsRSAAuthentication no
      HostbasedAuthentication no
      ChallengeResponseAuthentication no
      X11Forwarding no
      X11DisplayOffset 10
      PrintMotd no
      PrintLastLog yes
      TCPKeepAlive yes
      AcceptEnv LANG LC_*
      Subsystem sftp /usr/lib/openssh/sftp-server
      UsePAM yes
      MaxAuthTries 10
      AllowAgentForwarding no
      AllowUsers marcus

runcmd:
  # SSH Stuff
  - sed -i 's/#PasswordAuthentication yes/PasswordAuthentication no/' /etc/ssh/sshd_config
  - systemctl restart sshd

  # Firewall Stuff
  - ufw default deny incoming
  - ufw default allow outgoing
  - ufw allow 80  # http
  - ufw allow 443  # https
  - ufw allow 48512/tcp  # host ssh port
  - ufw allow 48513/tcp  # gitea ssh port
  - ufw allow 48256/tcp  # wireguard port
  - ufw allow 8080/tcp # General Web dev port
  - ufw allow 3000/tcp # Flask/NextJS dev port
  - ufw allow 33306/tcp # MySQL Port
  - ufw allow 54321/tcp # PostgresSQL port
  - ufw allow 11111/tcp # General Dev Port1
  - ufw allow 22222/tcp # General Dev Port2
  - ufw allow 33333/tcp # General Dev Port3
  - ufw allow 44444/tcp # General Dev Port4
  - ufw allow 55555/tcp # General Dev Port5
  - ufw enable

  # Docker
  - curl -fsSL https://get.docker.com | sh
  # Docker Deb Repository Method taken from https://bit.ly/41ZUKQN
  #  - install -m 0755 -d /etc/apt/keyrings
  #  - curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
  #  - chmod a+r /etc/apt/keyrings/docker.gpg
  #  - echo \
  #  "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian \
  #  "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
  #  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  #  - apt-get update -y
  #  - apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

