---
- name: Create fonts directory
  ansible.builtin.file:
    path: "{{ nerd_fonts_dir }}"
    state: directory
    mode: '0755'

- name: Create subdirectories for each nerd font
  ansible.builtin.file:
    path: "{{ nerd_fonts_dir }}/{{ item.name }}"
    state: directory
    mode: '0755'
  with_items: "{{ nerd_fonts_dicts }}"

- name: Download Nerd Fonts
  ansible.builtin.get_url:
    url: "{{ item.url }}"
    dest: "{{ nerd_fonts_dir }}/{{ item.name }}/{{ item.name }}.zip"
    mode: '0644'
  with_items: "{{ nerd_fonts_dicts }}"

- name: Extract Nerd Fonts
  ansible.builtin.unarchive:
    src: "{{ nerd_fonts_dir }}/{{ item.name }}/{{ item.name }}.zip"
    dest: "{{ nerd_fonts_dir }}/{{ item.name }}"
    remote_src: yes
    creates: "{{ nerd_fonts_dir }}/{{ item.name }}/.extracted"
  with_items: "{{ nerd_fonts_dicts }}"

- name: Check for missing font subdirectories
  ansible.builtin.stat:
    path: "{{ nerd_fonts_dir }}/{{ item.name }}"
  with_items: "{{ nerd_fonts_dicts }}"
  register: font_dirs

- name: Determine if cache needs updating
  ansible.builtin.set_fact:
    cache_update_required: "{{ font_dirs.results | selectattr('stat.exists', 'eq', false) | list | length > 0 }}"

- name: Update font cache
  ansible.builtin.command:
    cmd: fc-cache -fv "{{ nerd_fonts_dir }}"
  when: cache_update_required

- name: Create or update font cache marker file
  ansible.builtin.command:
    cmd: touch "{{ nerd_fonts_dir }}/.fc-cache-updated"
  when: cache_update_required
