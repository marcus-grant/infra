---
# main tasks file for marcus_grant.dotfiles.ssh
- name: Import preflight tasks to calculate ssh_config_hosts
  ansible.builtin.import_tasks:
    file: preflight.yml

- name: Template SSH config file
  ansible.builtin.template:
    src: config.j2
    dest: "{{ ansible_env.HOME }}/.ssh/config"
    owner: "{{ ansible_user }}"
    mode: 0600

- name: Set fact for default ssh comment string
  ansible.builtin.set_fact:
    ssh_key_comment: "{{ ansible_ssh_user }}@{{ inventory_hostname }}"

- name: Generate default id_ed25519 SSH key
  ansible.builtin.command:
    cmd: >
      ssh-keygen -q -t ed25519 -f ~/.ssh/id_ed25519
      -C '{{ ssh_default_ed_key_comment | default(ssh_key_comment) }}'
      -N '{{ ssh_default_ed_key_pass }}'
    creates: ~/.ssh/id_ed25519
  when: ssh_default_ed_key

- name: Generate default id_rsa SSH key
  ansible.builtin.command:
    cmd: >
      ssh-keygen -q -t rsa -b 4096 -f ~/.ssh/id_rsa
      -C '{{ ssh_default_rsa_key_comment | default(ssh_key_comment) }}'
      -N '{{ ssh_default_rsa_key_pass }}'
    creates: ~/.ssh/id_rsa
  when: ssh_default_rsa_key

- name: Generate any custom SSH keys
  ansible.builtin.command:
    cmd: >
      ssh-keygen -q -t ed25519 -f ~/.ssh/{{ ssh_k.name }}
      -C '{{ ssh_k.comment | default(ssh_key_comment) }}'
      -N '{{ ssh_k.pass | default('') }}'
    creates: "~/.ssh/{{ ssh_k.name }}"
  no_log: true
  loop_control: {loop_var: ssh_k}
  loop: "{{ ssh_custom_keys }}"
  when: ssh_k.name is defined

- name: Register public keys from listed files
  ansible.builtin.command:
    cmd: "cat ~/.ssh/{{ ssh_manual_key.pub }}.pub"
  changed_when: false
  register: ssh_manual_pubkeys
  loop_control: {loop_var: ssh_manual_key}
  loop: "{{ ssh_manual_transfers }}"
  when:
    - ssh_manual_transfer_on
    - ssh_manual_transfers | length > 0

- name: Prompt SSH key transfer instructions and wait till finished to continue
  ansible.builtin.pause:
    prompt: |-
      !!! ATTENTION !!!

      Please copy the below public key to clipboard:

      {{ ssh_manual_pubkeys.results[ssh_manual_index].stdout }}

      This public key needs to be copied/transferred to this site/location:

      {{ ssh_manual_key.location }}

      Once this is done, verify with 'ssh -V' and hit ENTER to contine
  loop: '{{ ssh_manual_transfers }}'
  loop_control: {loop_var: ssh_manual_key, index_var: ssh_manual_index}
  when:
    - ssh_manual_transfer_on
    - ssh_manual_transfers | length > 0
