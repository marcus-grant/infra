# .profile - managed by ansible role marcus_grant.dotfiles.profile

# path helpers
path_prepend() {
    # First check if parameter path is valid
    if [ ! -d "$1" ] ; then
        echo "path_append: $1 is not a valid directory"
        return 1
    fi
    # Then check if the path is already in the PATH
    if echo "$PATH" | grep -Eq "(^|:)$1($|:)" ; then
        return 0
    fi
    export PATH="$1:$PATH"
}

# begin path additions
{% for profile_path in profile_paths | reverse %}
path_prepend "{{ profile_path }}"
{% endfor %}
# end path additions

# locale
export LC_ALL={{ profile_lc_all }}

# xdg
{% if profile_xdg_include %}
export XDG_CONFIG_HOME="{{ profile_xdg_config_home }}"
export XDG_DATA_HOME="{{ profile_xdg_data_home }}"
export XDG_CACHE_HOME="{{ profile_xdg_cache_home }}"
export XDG_BIN_HOME="{{ profile_xdg_bin_home }}"
export XDG_RUNTIME_DIR="{{ profile_xdg_runtime_dir }}"
{% endif %}

# app defaults
export EDITOR={{ profile_editor }}
export GPG_TTY=$(tty)
export LS_COLORS="{{ profile_ls_colors }}"

{% if profile_envs | length > 0 and profile_custom_entries | length > 1 %}
# Ansible Managed Custom Section
# ==============================

{% endif %}
{% if profile_envs | length > 0 %}
# Custom Variables
{% endif %}
{% for custom_env in profile_envs %}
export {{ custom_env.name }}="{{ custom_env.value }}"
{% endfor %}
{% if profile_custom_entries | length > 0 %}

# Custom Entries
# BEGIN ANSIBLE MANAGED BLOCK
{% endif %}
{% for custom_entry in profile_custom_entries %}
{{ custom_entry }}
{% endfor %}
{% if profile_custom_entries | length > 0 %}
# END ANSIBLE MANAGED BLOCK
{% endif %}
