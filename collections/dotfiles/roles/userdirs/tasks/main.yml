---
# tasks file for marcus_grant.dotfiles.userdirs
- name: Set fact for profile_d path to use by checking two vars & final default
  ansible.builtin.set_fact:
    userdirs_profd: "{{ profile_d_path | default('~/.config/profile.d') }}"

- name: Debug profile_d_path, userdirs_profd & userdirs_profile_d_path
  ansible.builtin.debug:
    msg: >
      profile_d_path: {{ profile_d_path }},
      userdirs_profd: {{ userdirs_profd }},
      userdirs_profile_d_path: {{ userdirs_profile_d_path | default('undef') }}

- name: Template profile.d/10-userdirs.sh partial profile to be sourced
  ansible.builtin.template:
    src: userdirs.sh.j2
    dest: "{{ userdirs_profile_d_path | default(userdirs_profd) }}/10-userdirs.sh"
    owner: "{{ ansible_env.USER }}"
    mode: 0640
  when: userdirs_xdg_profile_d

# DELETEME: This might not be needed bc defining XDG paths explicitly,
# and using userdirs_xdg_use in profile.d then ensuring those dirs exist
# overrides all the previous functionality of scanning for XDG_ vars in env
# Get list of all ansible_env variables prefixed with XDG_
# TODO: Must filter IN XDG_ vars that have valid dirs:
#   - XDG_BIN_HOME=~/.local/bin
#   - XDG_DATA_HOME=~/.local/share
#   - XDG_CONFIG_HOME=~/.config
#   - XDG_CACHE_HOME=~/.cache
#   - XDG_RUNTIME_DIR=~/.cache/run

# - name: Register list of environment variables prefixed with XDG_
#   ansible.builtin.set_fact:
#     _xdg_vars: "{{ ansible_env.keys() | select('match', '^XDG_') | list }}"
#   when:
#     - ansible_env is defined
#     - userdirs_xdg_use
#
# - name: Ensure directories defined in XDG environment variables exist
#   ansible.builtin.file:
#     path: "{{ ansible_env[userdirs_xdg_var] }}"
#     state: directory
#     mode: '0750'
#   loop_control: {loop_var: userdirs_xdg_var}
#   loop: "{{ _xdg_vars }}"
#   when:
#     - ansible_env is defined
#     - userdirs_xdg_use
#
# - name: Create custom directories
#   ansible.builtin.file:
#     path: "{{ userdirs_custom_dir }}"
#     state: directory
#     owner: "{{ ansible_user_id }}"
#     mode: '0750'
#   loop_control: {loop_var: userdirs_custom_dir}
#   loop: "{{ userdirs_custom_dirs }}"
#   when: userdirs_custom_dirs | length > 0
