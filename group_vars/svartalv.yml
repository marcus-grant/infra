---
# Monitoring
## Fail2ban
fail2ban_loglevel: 3  # Default 3, number (1=ERROR,2=WARN,3=INFO,4=DEBUG)
fail2ban_ignoreips:  # List of str default [127.0.0.1/8]
  - 127.0.0.1/8
fail2ban_bantime: 300  # Default 600
fail2ban_maxretry: 5  # Default 3 max # retries before jailed
fail2ban_findtime: 300  # Default 600, time to maxretries before timer reset
fail2ban_sender: 'brokkr@svartalv.net'  # Sender email for announcements
fail2ban_services:
  - name: sshd
    enabled: true
    port: "{{ ssh_target_port }}"  # Secret hidden in out of tree inventory
    maxretry: 4
    bantime: 400
    findtime: 400

# DB
## PostgreSQL
postgresql_users:  # PostgreSQL users (roles within database system, not Unix owners)
  - name: "{{ admin_user }}"
postgresql_restarted_state: restarted  # [(restarted)|reloaded]
postgresql_service_state: started  # [started] - state after boot
postgresql_service_enabled: true  # [true] - whether systemctl enabled it
postgresql_locales: ['en_US.UTF-8']  # [[en_US.UTF-8]] debian-based only
postgresql_python_library: python3-psycopg2  # [python-psycopg2] use python3-*
postgresql_user: postgres  # [postgres]
postgresql_group: db  # [postgres]
postgres_databases:
  - {name: "{{ admin_user }}", login_user: "{{ admin_user }}"}
### VVVV TODO: Useful to add users for services that will use the database down the line?
### Host based authentication (hba) entries to be added to the pg_hba.conf. This
postgresql_hba_entries:  # variable's defaults reflect the defaults that come with a fresh installation.
  - {type: local, database: all, user: postgres, auth_method: peer}
  - {type: local, database: all, user: "{{ admin_user }}", auth_method: peer}
  # TODO: I'm not sure if the below is advisable but it sounds insecure unfortunately to leave it
  # - {type: local, database: all, user: all, auth_method: peer}
  - {type: host, database: all, user: all, address: '127.0.0.1/32', auth_method: "{{ postgresql_auth_method }}"}
  - {type: host, database: all, user: all, address: '::1/128', auth_method: "{{ postgresql_auth_method }}"}

## MariaDB/MySQL
mysql_user_home: /root
mysql_user_name: root
mysql_user_password: "{{ vault_postgres_root_password }}"
mysql_enabled_on_startup: true
mysql_users:
  - name: "{{ admin_user }}"
    password: "{{ ansible_become_password }}"
    state: present

# Networking
## Caddy
caddy_github_token: vault_github_token

# Dotfiles
## Bash
bash_set_default_shell: true
dotfiles_bash_git_force: true

## Vim
vim_git_force: true
vim_git_backup: false

## TMux
tmux_git_force: true
tmux_git_backup: false

# Packages
packages_installed:
  - fail2ban
  - ncdu
  - ranger
  - tree
  - vim
