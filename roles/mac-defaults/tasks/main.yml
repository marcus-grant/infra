---

- name: "Key repeat in VsCode"
  community.general.osx_defaults:
    domain: com.microsoft.VSCode
    key: ApplePressAndHoldEnabled
    type: bool
    value: "{{ mac_defaults_keyboard_vscode_key_hold_enabled }}"

- name: Disable macOS keyboard hold
  community.general.osx_defaults:
    key: ApplePressAndHoldEnabled
    type: bool
    value: "{{ mac_defaults_key_hold_enabled }}"

- name: "(En/dis)able macOS keyboard auto-correct"
  community.general.osx_defaults:
    domain: NSGlobalDomain
    key: NSAutomaticSpellingCorrectionEnabled
    type: bool
    value: "{{ mac_defaults_keyboard_automatic_spelling_correct }}"

- name: "(En/dis)able macOS keyboard auto-quote"
  community.general.osx_defaults:
    domain: NSGlobalDomain
    key: NSAutomaticQuoteSubstitutionEnabled
    type: bool
    value: "{{ mac_defaults_keyboard_auto_quote_subst }}"

- name: "(En/dis)able macOS keyboard auto-hyphen"
  community.general.osx_defaults:
    domain: NSGlobalDomain
    key: NSAutomaticDashSubstitutionEnabled
    type: bool
    value: "{{ mac_defaults_keyboard_auto_dash_subst }}"

- name: "(En/dis)able macOS keyboard auto-period"
  community.general.osx_defaults:
    domain: NSGlobalDomain
    key: NSAutomaticPeriodSubstitutionEnabled
    type: bool
    value: "{{ mac_defaults_keyboard_auto_period_subst }}"

- name: Set spotlight menu icon on/off
  community.general.osx_defaults:
    domain: com.apple.Spotlight
    host: currentHost
    key: MenuItemHidden
    type: int
    value: "{{ mac_defaults_spotlight_shown | int }}"

# FIXME doesn't work but might also not be needed with VSCode &
# iTerm2 (included in app) fixes
# - name: Set macOS initial key repeat interval
#   community.general.osx_defaults:
#     key: InitialKeyRepeat
#     type: int
#     value: "{{ mac_defaults_init_key_repeat_time }}"

# - name: Set macOS initial key repeat interval
#   community.general.osx_defaults:
#     key: KeyRepeat
#     type: int
#     value: "{{ mac_defaults_key_repeat_time }}"

# # Modifer key settings FIXME: This doesn't work
# - name: Load macOS preferences
#   ansible.builtin.command: "defaults read -g com.apple.keyboard.modifiermapping"
#   register: existing_mapping
#   error_when: false
#   changed_when: false

# - name: Modify Caps Lock to Esc mapping
#   ansible.builtin.command: >
#     defaults write -g com.apple.keyboard.modifiermapping '(
#       { HIDKeyboardModifierMappingDst = 30064771300; HIDKeyboardModifierMappingSrc = 30064771129; },
#       { HIDKeyboardModifierMappingDst = 30064771129; HIDKeyboardModifierMappingSrc = 30064771300; }
#     )'
#   when: '30064771300' not in existing_mapping.stdout

# # Some more defaults to add
# https://gist.github.com/tylerwalts/9375263
# https://developer.apple.com/documentation/devicemanagement/dock
# AN ANSIBLE ROLE EVEN FOR THESE SORTS OF CONFIGS
# https://github.com/lafarer/ansible-role-osx-defaults
# https://gist.githubusercontent.com/brandonb927/3195465/raw/0c0b99dca7bd3ca43ba33e8f0a659d9841b0a2ed/osx-for-hackers.sh
# - name: Set fact for valid dock orientations
#   ansible.builtin.set_fact:
#     mac_dock_valid_orientations: [left, bottom, right]

# - name: Set dock orientation
#   community.general.osx_defaults:
#     domain: com.apple.dock
#     key: orientation
#     type: string
#     value: "{{ mac_dock_orientation }}"
#     state: present
#   register: mac_dock_orientation_set_defaults
#   when:
#     - mac_dock_orientation is defined
#     - mac_dock_orientation in mac_dock_valid_orientations

# - name: Restart dock when defaults to dock settings have changed
#   ansible.builtin.command: killall Dock
#   when: mac_dock_orientation_set_defaults.changed

# from:
# https://github.com/lafarer/ansible-role-osx-defaults
# - block:
#   - name: "Spotlight - Building List of Indexing Items"
#     set_fact:
#       orderedItems: "{{ orderedItems| default([])  }} + [ '{{ item }}' ]"
#     loop: "{{ mac_spotlight_ordered_items }}"
#     when: mac_spotlight_ordered_items is defined

# - name: "Spotlight - Apply List of Indexing Items"
#   community.general.osx_defaults: { domain: 'com.apple.spotlight', key: 'orderedItems', type: array, value: "{{ mac_spotlight_ordered_items }}" }
#   when: orderedItems is defined and orderedItems != []
#   changed_when: no
#   notify: Restart Spotlight
# # Privilege escalation to `target_user_id` is only required for inner steps when
# # the `target_user_id` doesn't match the `ansible_user_id`
# become: "{{ mac_defaults_user != ansible_user_id }}"
# become_user: "{{ mac_defaults_user }}"

# - name: "Keyboard - User - Automatic Spelling Correction & Smart Substitutions"
#   osx_defaults: { domain: 'NSGlobalDomain', key: "{{ item.key }}", type: "{{ item.type }}", value: "{{ item.value }}" }
#   loop:
#     - { key: 'NSAutomaticSpellingCorrectionEnabled',  type: 'bool', value: '{{ mac_defaults_keyboard_automatic_spelling_correct }}'}
#     - { key: 'NSAutomaticQuoteSubstitutionEnabled',   type: 'bool', value: '{{ mac_defaults_keyboard_auto_quote_subst }}'}
#     - { key: 'NSAutomaticDashSubstitutionEnabled',    type: 'bool', value: '{{ mac_defaults_keyboard_auto_dash_subst }}'}
#     - { key: 'NSAutomaticPeriodSubstitutionEnabled',  type: 'bool', value: '{{ mac_defaults_keyboard_auto_period_subst }}'}
#   when: item.value | string | length > 0

# TODO The caps lock tasks don't persist after reboots, still need to find out how to do this properly
# - name: Check if Caps-Lock is already set to Escape
#   ansible.builtin.command: 'hidutil property --get "UserKeyMapping"'
#   changed_when: false
#   register: hdutil_prop_get_cmd

# - name: Debug hidutil output
#   debug:
#     var: hdutil_prop_get_cmd

# # Solution comes from this stack overflow:
# # https://stackoverflow.com/questions/127591/using-caps-lock-as-esc-in-mac-os-x
# - name: Set caps lock according to escape
#   ansible.builtin.command: >
#     hidutil property --set '{"UserKeyMapping":[{"HIDKeyboardModifierMappingSrc":0x700000039,"HIDKeyboardModifierMappingDst":0x700000029}]}'
#   changed_when: hdutil_prop_get_cmd.stdout == '(null)' and mac_caps_lock_esc
#   when:
#     - mac_caps_lock_esc
#     - hdutil_prop_get_cmd.rc  == 0
#     - "'Dst = 30064771113' not in hdutil_prop_get_cmd.stdout"
#     - "'Src = 30064771129' not in hdutil_prop_get_cmd.stdout"

# ok: [odin] => {
#     " hdutil_prop_get_cmd": {
#         "changed": true,
#         "cmd": [
#             "hidutil",
#             "property",
#             "--get",
#             "UserKeyMapping"
#         ],
#         "delta": "0:00:00.010320",
#         "end": "2022-08-29 12:58:42.909509",
#         "failed": false,
#         "msg": "",
#         "rc": 0,
#         "start": "2022-08-29 12:58:42.899189",
#         "stderr": "",
#         "stderr_lines": [],
#         "stdout": "(null)",
#         "stdout_lines": [
#             "(null)"
#         ]
#     }
# }
