---
# Main tasks file for roles/pip
- name: Ensure pip3 is installed (Debian family)
  ansible.builtin.package:
    name: python3-pip
    state: present
  when:
    - ansible_os_family is defined
    - ansible_os_family == 'Debian' or ansible_os_family == 'RedHat'

- name: Ensure pip3 is installed (Catchall)
  ansible.builtin.package:
    name: python-pip
    state: present
  when:
    - ansible_os_family != 'Debian'
    - ansbile_os_family != 'RedHat'

# Include specific pip-package tasks file
- name: Include pip-package tasks
  ansible.builtin.import_tasks: pip-package.yml
  when:
    - pip_install_docker
    - ansible_os_family != 'Darwin'

# TODO: I can't think of simple logic to
# make this work generically
# a lot of modern pip modules now will warn (rightfully so)
# that root global installs should be done on the package manager
# This was mostly used to install python docker so ignoring for now
# For debian, just prefix the packages with python3 and install in apt
# - name: Install extra pip libraries (Debian family)
#   ansible.builtin.apt:
#     name: "python3-{{ pip_apt_package }}"
#     state: present
#   loop: "{{ pip_installed_packages }}"
#   loop_control:
#     loop_var: pip_apt_package
#   when:
#     - remote_user == 'root'
#     - ansible_os_family == 'debian'
#     - pip_installed_packages is defined
#     - pip_installed_packages | length > 0

# - name: Install extra pip libraries (Catchall non-root)
#   ansible.builtin.pip:
#     name: "{{ item }}"
#     state: present
#   loop: "{{ pip_installed_packages }}"
#   when:
#     - remote_user != 'root'
#     - pip_installed_packages is defined
#     - pip_installed_packages | length > 0
