---
# Main tasks file of nextcloud role
- name: Ensure Nextcloud user exists
  user:
    name: nextcloud
    comment: For use with nextcloud services/files only
    uid: "{{ nextcloud_uid | int }}"
  when: nextcloud_uid is defined

- name: Create Nextcloud directories
  file:
    path: "{{ item }}"
    state: directory
    # owner: "{{ admin_user }}"
    owner: "{{ nextcloud_uid | default('www-data') }}"  # Is this the right defaults?
    group: docker
    mode: 0775
  loop:
    - "{{ nextcloud_data_directory }}/app"
    - "{{ nextcloud_data_directory }}/db"
    - "{{ nextcloud_data_directory }}/cache"
    - "{{ nextcloud_data_directory }}/data"

- name: Nextcloud database Docker container
  docker_container:
    name: nextcloud-db
    image: "{{ nextcloud_db_docker_image }}"
    pull: true
    restart_policy: unless-stopped
    user: "{{ nextcloud_uid | default(omit) }}"
    volumes:
      - "{{ nextcloud_data_directory }}/db:/var/lib/postgresql/data:rw"
    env:
      POSTGRES_DB: "nextcloud"
      POSTGRES_USER: "{{ nextcloud_sql_user }}"
      POSTGRES_PASSWORD: "{{ nextcloud_sql_password }}"
    # TODO: Setup management for container memory use
    # memory: "{{ nextcloud_db_memory }}"

- name: Nextcloud Redis cache Docker container
  docker_container:
    name: nextcloud-cache
    image: "{{ nextcloud_cache_docker_image }}"
    pull: true
    restart_policy: unless-stopped
    user: "{{ nextcloud_uid | default(omit) }}"
    volumes:
      - "{{ nextcloud_data_directory }}/cache:/var/lib/redis:rw"
    # TODO: Setup management for container memory use
    # memory: "{{ nextcloud_cache_memory }}"

- name: Nextcloud Docker Container
  docker_container:
    name: nextcloud
    image: "{{ nextcloud_docker_image }}"
    pull: true
    restart_policy: unless-stopped
    user: "{{ nextcloud_uid | default(omit) }}"
    links:
      - "nextcloud-db"
      - "nextcloud-cache"
    volumes:
      - "{{ nextcloud_data_directory }}/app:/var/www/html:rw"
      - "{{ nextcloud_data_directory }}/data:/var/www/html/data:rw"
    ports:
      - "{{ nextcloud_port }}:80"
    env:
      POSTGRES_DB: "nextcloud"
      POSTGRES_USER: "{{ nextcloud_sql_user }}"
      POSTGRES_PASSWORD: "{{ nextcloud_sql_password }}"
      POSTGRES_HOST: "nextcloud-db"
      REDIS_HOST: "nextcloud-cache"
      # TODO: Add the other domains as encrypted vars later (space delim)
      # NEXTCLOUD_TRUSTED_DOMAINS: "{{ nextcloud_hostname }}.{{ server_base_domain }}"
    # TODO: Control memory usage of container
    # memory: "{{ nextcloud_memory }}"
    labels:
      traefik.enable: "{{ nextcloud_available_externally }}"
      traefik.http.routers.nextcloud.rule: "Host(`{{ nextcloud_hostname }}.{{ server_base_domain }}`)"
      traefik.http.routers.nextcloud.tls.certresolver: "letsencrypt"
      traefik.http.routers.nextcloud.tls.domains[0].main: "{{ server_base_domain }}"
      traefik.http.routers.nextcloud.tls.domains[0].sans: "*.{{ server_base_domain }}"
      traefik.http.services.nextcloud.loadbalancer.server.port: "80"
